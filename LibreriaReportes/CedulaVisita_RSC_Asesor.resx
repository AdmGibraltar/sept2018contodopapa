<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Value" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="sqlSelectCommand1.DesignTimeVisible" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="sqlSelectCommand1.CommandDesignTimeVisible" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="$this.SnapToSnapLines" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
</root>